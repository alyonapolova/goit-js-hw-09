{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QACtBD,SAASE,iBAAiB,SAG1C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACRC,YAAW,WACNC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAGPN,EAAOa,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAQN,IAPA,IAAMC,EAAeF,EAAMG,OAEvBC,EAAQC,OAAOH,EAAaI,SAAgB,MAAEC,OAC9CC,EAAOH,OAAOH,EAAaI,SAAe,KAAEC,OAC5CE,EAASJ,OAAOH,EAAaI,SAAiB,OAAEC,OAG3CG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAE/BpB,EAAcoB,EAAI,EAAGN,EAAQM,EAAIF,GAC9BG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAInDN,EAAOiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst inputEl = document.querySelectorAll('input');\n//console.log(formEl.elements);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const intervalId = setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nformEl.addEventListener('submit', formComplete);\n\nfunction formComplete(event) {\n  event.preventDefault();\n  const formElements = event.target;\n\n  let delay = Number(formElements.elements['delay'].value);\n  let step = Number(formElements.elements['step'].value);\n  let amount = Number(formElements.elements['amount'].value);\n  //console.log(typeof delay);\n\n  for (let i = 0; i < amount; i += 1) {\n    //console.log('i:', i);\n    createPromise(i + 1, delay * i + step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  formEl.reset();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","formElements","target","delay1","Number","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.bdea64a3.js.map"}